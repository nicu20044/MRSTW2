@model MusicStore2.Domain.Entities.User.AppUser
@{
    ViewBag.Title = "Edit User";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit User</title>
    <link rel="stylesheet" href="~/Scripts/css/Admin.css">
</head>
<body>

    <nav>
        <a href="@Url.Action("Dashboard", "Admin")" class="nav-btn">Dashboard</a>
        <a href="@Url.Action("ManageContent", "Admin")" class="nav-btn">Manage Songs</a>
        <a href="@Url.Action("ManageUsers", "Admin")" class="nav-btn">Manage Users</a>
    </nav>

    <div class="container">
        <h2>Edit User</h2>
        
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.LastLoginTime)
            
            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Name")
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Email")
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email", required = "required" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, "Password")
                @Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control", placeholder = "Leave blank to keep current password" })
                @Html.ValidationMessageFor(model => model.PasswordHash)
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.UserRole, "Role")
                <select name="UserRole" class="form-control" required>
                    <option value="Admin" @(Model.UserRole == "Admin" ? "selected" : "")>Admin</option>
                    <option value="Artist" @(Model.UserRole == "Artist" ? "selected" : "")>Artist</option>
                    <option value="Listener" @(Model.UserRole == "Listener" ? "selected" : "")>Listener</option>
                </select>
                @Html.ValidationMessageFor(model => model.UserRole)
            </div>
            
            <div class="form-buttons">
                <input type="submit" value="Save Changes" class="btn-primary" />
                <a href="@Url.Action("ManageUsers", "Admin")" class="btn-cancel">Cancel</a>
            </div>
        }
    </div>

</body>
</html>